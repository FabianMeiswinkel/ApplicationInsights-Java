package com.microsoft.applicationinsights.smoketest;

import java.util.concurrent.TimeUnit;
import java.util.function.Predicate;

import com.microsoft.applicationinsights.internal.schemav2.Data;
import com.microsoft.applicationinsights.internal.schemav2.Envelope;
import com.microsoft.applicationinsights.internal.schemav2.RequestData;
import org.junit.*;

@UseAgent
public class SpringSchedulingTest extends AiSmokeTest {

    @Test
    @TargetUri("/scheduler")
    public void fixedRateSchedulerTest() throws Exception {

        // wait for the http request generated by this test
        mockedIngestion.waitForItem(new Predicate<Envelope>() {
            @Override
            public boolean test(Envelope input) {
                if (!"RequestData".equals(input.getData().getBaseType())) {
                    return false;
                }
                RequestData data = (RequestData) ((Data<?>) input.getData()).getBaseData();
                return data.getName().equals("GET /SpringScheduling/scheduler");
            }
        }, 10, TimeUnit.SECONDS);

        // wait for at least two spring scheduler "requests"
        mockedIngestion.waitForItems(new Predicate<Envelope>() {
            @Override
            public boolean test(Envelope input) {
                if (!"RequestData".equals(input.getData().getBaseType())) {
                    return false;
                }
                RequestData data = (RequestData) ((Data<?>) input.getData()).getBaseData();
                return data.getName().equals("SpringSchedulingApp.fixedRateScheduler");
            }
        }, 2, 10, TimeUnit.SECONDS);
    }
}
